<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan base-package="com.endava.twitt" />
	<context:component-scan base-package="com.endava.twitt.dao" />
	<context:component-scan base-package="com.endava.twitt.models" />
	<context:component-scan base-package="com.endava.twitt.services" />
	

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="endava" />
	</beans:bean>
	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.endava.twitt.models.User</beans:value>
				<beans:value>com.endava.twitt.models.Tweets</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<!-- <beans:prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect 
					</beans:prop> -->

				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>

				<beans:prop key="hibernate.show_sql">true</beans:prop>

				<beans:prop key="maxwait">10000</beans:prop>
				<beans:prop key="maxidle">25</beans:prop>
				<beans:prop key="minidle">5</beans:prop>

			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="usersDao" class="com.endava.twitt.dao.UserDaoImplement">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="userService"
		class="com.endava.twitt.services.UserServicesImplement">
		<beans:property name="userDao" ref="usersDao"></beans:property>		
	</beans:bean>
	
	<beans:bean id="usersTweets" class="com.endava.twitt.dao.TweetImplement">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

	<beans:bean id="tweetService"
		class="com.endava.twitt.services.TweetServiceImplement">
		<beans:property name="tweetDao" ref="usersTweets"></beans:property>
	</beans:bean>

	<beans:bean id="uniqueUserValidator" class="com.endava.twitt.annotation.UniqueUserValidator">	
		<beans:property name="userDao" ref="usersDao"></beans:property>
	</beans:bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>


	<!-- Error messages -->

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="/WEB-INF/views/formMessages" />
	</beans:bean>

	<!--Security Configuration -->
	
	
	<!-- <beans:import resource="classpath:/WEB-INF/spring/appServlet/security-config.xml"/> -->

	<!--Apache Tiles Configuration -->

	<!-- <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> 
		<beans:property name="definitions" value="/WEB-INF/defs/general.xml"/> </beans:bean> 
		<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
		/> </beans:bean> -->

<!--	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" >
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/defs/general.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>-->

	<beans:bean id="viewResolver"	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</beans:bean>

	<context:annotation-config />




</beans:beans>
